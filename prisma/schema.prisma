// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid()) @db.Uuid
  email        String        @unique
  image        String?
  firstName    String?       @map("first_name")
  lastName     String?       @map("last_name")
  password     String?
  accounts     Account[]
  transactions Transaction[]

  @@map("users")
}

model Account {
  id                String @id @default(uuid()) @db.Uuid
  userId            String @map("user_id") @db.Uuid
  type              String
  provider          String
  providerAccountId String @map("provider_account_id")
  user              User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

enum TransactionType {
  income
  expense
}

model Category {
  id           String          @id @default(uuid()) @db.Uuid
  name         String
  type         TransactionType
  image        String?
  sequence     Int?
  transactions Transaction[]

  @@unique([name, type])
  @@unique([type, sequence])
  @@map("categories")
}

model Transaction {
  id         String   @id @default(uuid()) @db.Uuid
  userId     String   @map("user_id") @db.Uuid
  categoryId String   @map("category_id") @db.Uuid
  payee      String
  date       DateTime @db.Date
  amount     Decimal  @db.Decimal(12, 2)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("transactions")
}